@model Guitar.Models.MusicScore

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}
<script src="~/ueditor/ueditor.all.js"></script>
<script src="~/ueditor/ueditor.config.js"></script>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<link href="~/ueditor/themes/default/css/ueditor.css" rel="stylesheet" />
<script src="~/ueditor/lang/zh-cn/zh-cn.js"></script>
<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
  
    <div class="form-horizontal">
        <h4>MusicScore</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
            @Html.LabelFor(model => model.User_id, "User_id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("User_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.User_id, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.Ms_title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ms_title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ms_title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Score, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Score, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextAreaFor(model => model.Score,htmlAttributes:new { @id="Score"}) 
                @*@Html.TextAreaFor(model => model.Score, new { htmlAttributes = new { @class = "form-control" }, id = "Score" })*@
                @*@Html.ValidationMessageFor(model => model.Score, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ms_img, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ms_img, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ms_img, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ms_label, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ms_label, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ms_label, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ms_description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ms_description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ms_description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ms_addtime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ms_addtime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ms_addtime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
        @Scripts.Render("~/bundles/jqueryval", "~/ueditor/ueditor.config.js", "~/ueditor/ueditor.all.js") 
        @*<script type="text/javascript">

        var nreditor = UE.getEditor('Score');
        </script>*@
        <script type="text/javascript">
        var editorOption = {
        initialFrameWidth: 784,
        initialFrameHeight: 600,
        iframeCssUrl: '/ueditor/themes/iframe.css',//样式路径
        };
        var editor = new baidu.editor.ui.Editor(editorOption);
        editor.render('Score');

        </script>
    }
